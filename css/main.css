/*! normalize-scss | MIT/GPLv2 License | bit.ly/normalize-scss */html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,footer,header,nav,section{display:block}h1{font-size:2em;margin:0.67em 0}figcaption,figure{display:block}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}main{display:block}pre{font-family:monospace, monospace;font-size:1em}a{background-color:transparent;-webkit-text-decoration-skip:objects}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace, monospace;font-size:1em}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-0.25em}sup{top:-0.5em}audio,video{display:inline-block}audio:not([controls]){display:none;height:0}img{border-style:none}svg:not(:root){overflow:hidden}button,input,optgroup,select,textarea{font-family:sans-serif;font-size:100%;line-height:1.15;margin:0}button{overflow:visible}button,select{text-transform:none}button,html [type="button"],[type="reset"],[type="submit"]{-webkit-appearance:button}button::-moz-focus-inner,[type="button"]::-moz-focus-inner,[type="reset"]::-moz-focus-inner,[type="submit"]::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,[type="button"]:-moz-focusring,[type="reset"]:-moz-focusring,[type="submit"]:-moz-focusring{outline:1px dotted ButtonText}input{overflow:visible}[type="checkbox"],[type="radio"]{box-sizing:border-box;padding:0}[type="number"]::-webkit-inner-spin-button,[type="number"]::-webkit-outer-spin-button{height:auto}[type="search"]{-webkit-appearance:textfield;outline-offset:-2px}[type="search"]::-webkit-search-cancel-button,[type="search"]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}fieldset{padding:0.35em 0.75em 0.625em}legend{box-sizing:border-box;display:table;max-width:100%;padding:0;color:inherit;white-space:normal}progress{display:inline-block;vertical-align:baseline}textarea{overflow:auto}details{display:block}summary{display:list-item}menu{display:block}canvas{display:inline-block}template{display:none}[hidden]{display:none}@font-face{font-family:'DroidSans';src:url("../fonts/DroidSans.eot?#iefix") format("embedded-opentype"),url("../fonts/DroidSans.woff") format("woff"),url("../fonts/DroidSans.ttf") format("truetype"),url("../fonts/DroidSans.svg#DroidSans") format("svg");font-weight:400;font-style:normal}@font-face{font-family:'DroidSans';src:url("../fonts/DroidSans-Bold.eot?#iefix") format("embedded-opentype"),url("../fonts/DroidSans-Bold.woff") format("woff"),url("../fonts/DroidSans-Bold.ttf") format("truetype"),url("../fonts/DroidSans-Bold.svg#DroidSans-Bold") format("svg");font-weight:700;font-style:normal}@font-face{font-family:'Oswald-Heavy';src:url("../fonts/Oswald-Heavy.eot?#iefix") format("embedded-opentype"),url("../fonts/Oswald-Heavy.woff") format("woff"),url("../fonts/Oswald-Heavy.ttf") format("truetype"),url("../fonts/Oswald-Heavy.svg#Oswald-Heavy") format("svg");font-weight:400;font-style:normal}.heading-preview{margin-bottom:90px}.heading-preview .title-preview{margin:0 0 5px;padding:0;font:400 116px/1 "Oswald-Heavy",sans-serif;color:#df001f}.heading-preview p{padding:0;margin:0;font:400 80px/1 "Great Vibes",cursive;color:#333;text-align:center}.heading{margin-bottom:39px}.heading .title-section{margin:0 0 5px 0;padding:0;font:400 32px/0.97 "Oswald",sans-serif;color:#333;text-transform:uppercase}.heading p{margin:0;padding:0;font:400 32px/0.97 "Great Vibes",cursive;color:#df001f}.introducing-section-slider .card .text-card h5{padding:0;margin:0 0 5px 0;font:400 22px/0.97 "Oswald",sans-serif;color:#fff}.introducing-section-slider .card .text-card p{padding:0;margin:0 0 25px 0;font:400 16px/0.97 "Droid Sans",sans-serif;color:#fff}.section-posts .title-post{padding:0;margin:0 0 5px 0;font:500 32px/0.97 "Oswald",sans-serif;color:#fff;text-transform:uppercase}.section-posts p{max-width:556px;padding:0;margin:0 0 45px 0;font:400 22px/0.97 "Droid Sans",sans-serif;color:#fff}.section-posts p span{font:400 65px/0.97 "Great Vibes",cursive}.official-apps-title{padding:0;margin:0 0 9px 0;font:500 32px/1.5 "Oswald",sans-serif;color:#fff}.official-apps p{padding:0;margin:0 0 40px 0;font:400 22px/1.4 "Droid Sans",sans-serif;color:#fff}.footer p{margin:0;padding:0}*{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box}body{color:#333;font:400 16px "Droid Sans",sans-serif}.form-container{margin:0 auto;max-width:530px;width:100%;display:flex;align-items:center;border-bottom:4px solid #999999}.form-container .form-group{position:relative;width:100%}.form-container .form-group input{display:block;width:80%;padding:19px 10px 19px 0;color:#282828;border:none;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none}.form-container .form-group label{color:#282828;position:absolute;pointer-events:none;left:0;top:50%;transform:translateY(-50%);-webkit-transition:0.3s ease all;-moz-transition:0.3s ease all;-ms-transition:0.3s ease all;transition:0.3s ease all}.form-container .form-group input:focus+label{top:5px;font-size:13px}.form-container .btn-newsletter{-webkit-appearance:none;-moz-appearance:none;appearance:none;border:none;background:none}.btn{display:inline-block;-webkit-border-radius:30px;border-radius:30px;font:700 12px "Droid Sans",sans-serif;text-decoration:none;border:none;padding:18px 40px;transition:.5s;text-transform:uppercase}.btn:hover{opacity:0.7}.btn-main{color:#fff;background:#df001f}.btn-secondary{background-color:#fff;color:#df001f}.btn-dark{width:162px;height:50px;-webkit-border-radius:5px;border-radius:5px;background:#050708;padding:11px}.pagination{margin-left:auto;margin-bottom:10px;display:flex;justify-content:flex-end}.pagination ul{margin:0;padding:0;list-style-type:none}.pagination ul li{display:inline-block}.pagination ul li .arrow{display:flex;width:35px;height:35px;background:#df001f;text-decoration:none}.pagination ul li .arrow .fa{color:#fff;margin:auto}.share-counter{margin:0;padding:0;list-style-type:none}.share-counter-item{display:inline-block;margin-right:35px}.share-counter-item a{text-decoration:none;color:#fff;font:400 14px "Open Sans",sans-serif}.share-counter-item a .fa{font-size:20px;margin-right:10px;vertical-align:middle}.share-counter-item a:hover{opacity:0.7}.scroll-bar{width:100%;height:4px;background:#e9e9e9;position:relative}.scroll-dragger{width:20%;height:4px;background:#df001f;position:absolute;left:15px}.container{width:100%;max-width:1200px;margin:0 auto;padding:0 15px}.row{display:flex;flex-wrap:wrap;margin:0 -15px}.column-1{width:8.33333%}.column-2{width:16.66667%}.column-3{width:25%}.column-4{width:33.33333%}.column-5{width:41.66667%}.column-6{width:50%}.column-7{width:58.33333%}.column-8{width:66.66667%}.column-9{width:75%}.column-10{width:83.33333%}.column-11{width:91.66667%}.column-12{width:100%}[class^='column']{padding:0 15px}.header{padding:11px 50px 13px;background:#df001f;display:flex;align-items:center;position:relative}.header-nav{padding-right:60px;color:#fff}.header-logo{position:absolute;max-width:115px;left:50%;transform:translateX(-50%)}.header-logo img{display:block;width:100%}.header .right-bar{display:flex;align-items:center;padding-left:60px;margin-left:auto}.header .right-bar .share-counter{margin:0;padding:0}.header .right-bar .share-counter-item{margin-right:45px}.header .right-bar .share-counter-item:last-child{margin-right:0}.header .right-bar .btn-secondary{margin-left:56px;white-space:nowrap}.nav-list{margin:0;padding:0;list-style-type:none}.nav-item{display:inline-block}.nav-item a{position:relative;display:block;padding:0 20px;font:700 13px "Droid Sans",sans-serif;color:inherit;text-transform:uppercase;text-decoration:none;outline:none}.nav-item a:before{content:'';display:block;position:absolute;left:0;top:50%;height:1px;width:0;background:transparent;-webkit-transition:width 0.3s ease-in-out;-moz-transition:width 0.3s ease-in-out;-ms-transition:width 0.3s ease-in-out;transition:width 0.3s ease-in-out}.nav-item a:hover:before{background:#fff;width:100%}.footer{padding:69px 0 90px;text-align:center;border-top:1px solid #dfdfdf}.footer-nav{color:#333;margin:0 auto 25px}.footer-nav a:hover:before{background:#333}.footer p{font:400 13px "Droid Sans",sans-serif}.footer p span{font:400 28px "Great Vibes",cursive;color:#df001f}.preview{display:flex;align-items:center;background:url("../img/rock-singer.jpg") center no-repeat;background-size:cover;min-height:700px;padding:103px 0 100px;position:relative}.preview .container{text-align:center}.preview .timer{width:100%;height:3px;background:#d3d3d3;position:absolute;left:0;right:0;bottom:0;z-index:1}.preview .timer:before{content:'';display:block;width:75%;height:3px;background:#df001f}.introducing-section{padding-top:103px}.introducing-section .container{padding-bottom:110px;border-bottom:1px solid #dfdfdf}.introducing-section .heading{margin-bottom:0}.introducing-section-slider .card .container-img{position:relative;overflow:hidden}.introducing-section-slider .card img{display:block}.introducing-section-slider .card .text-card{padding:17px 28px 26px 28px;background-color:#df001f;position:absolute;bottom:-50px;width:100%;-webkit-transition:bottom 0.3s ease-in-out;-moz-transition:bottom 0.3s ease-in-out;-ms-transition:bottom 0.3s ease-in-out;transition:bottom 0.3s ease-in-out}.introducing-section-slider .card .text-card:hover{bottom:0}.upcoming-section{padding:70px 0 100px}.upcoming-section img{display:block}.upcoming-section .flex-wrap{display:flex;margin-bottom:5px}.upcoming-section .poster{padding-left:79px;flex-grow:1}.upcoming-section .poster h3{padding:20px 0 0;margin:0 0 20px}.upcoming-section .poster-list{overflow:hidden;padding:0;margin:0 0 30px}.upcoming-section .poster dt{float:left;clear:left;font:"Droid Sans",sans-serif;margin-top:0}.upcoming-section .poster dd{font:"Droid Sans",sans-serif;margin:0 0 15px 60px}.upcoming-section .poster dd:before{display:inline-block;margin:0 5px;content:":"}.video-section{padding:70px 0 100px}.video-section .heading{margin-bottom:0}.video-section .slide .container-video iframe{width:100%}.section-posts .text-wrap{background:#333 url("../img/accordionist.png") right top no-repeat;background-size:cover;min-height:370px;padding:80px 0 80px 100px}.section-songs{padding-top:104px;padding-bottom:92px}.section-songs .container-audio iframe{margin-bottom:30px}.section-songs .play-list{margin:0;padding:0;list-style:inside decimal-leading-zero;column-count:3}.section-songs .play-list .song-item{padding:10px 0 14px;margin-right:60px;border-bottom:1px solid #dfdfdf}.section-gallery{padding-top:104px;padding-bottom:92px}.section-gallery .container-img-gallery{margin-bottom:30px}.section-gallery .container-img-gallery a{display:block}.section-gallery .container-img-gallery img{display:block}.official-apps .container{background:#050708 url("../img/listener.png") center no-repeat;background-size:cover;min-height:354px;padding:80px 0;text-align:center}.official-apps ul{margin:0;padding:0;list-style-type:none}.official-apps ul li{margin-right:10px;display:inline-block}.official-apps ul li:last-child{margin-right:0}.section-newsletter{padding:105px 0 70px}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
